dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScoreHolder;
import uk.ac.diamond.ss.domain.Allocation;
import uk.ac.diamond.ss.domain.Person;
import org.optaplanner.core.api.score.constraint.primint.IntConstraintMatch;

global HardSoftLongScoreHolder scoreHolder;

rule "groupSize"
    when
    	Allocation($aid : ID, getShift() != null, $ashiftID : getShift().getID())
    	$total : Number() from accumulate(
    		$a : Allocation(ID>= $aid, getShift().getID() == $ashiftID), 
    		count($a)
    	)
    then
    scoreHolder.addHardConstraintMatch(kcontext,2-$total.intValue());//should be 5 if 5 per group is max preferred
end

rule "noOverlappingAllocations"
    when
    	 Allocation($aid : ID, getShift() != null, $ashift : getShift(), getPerson() != null, $aPersonID : getPerson().getID())
    	 Allocation(ID> $aid, getShift().checkOverlap($ashift), getPerson().getID() == $aPersonID )
    then
    scoreHolder.addHardConstraintMatch(kcontext, -5);
end
	
	rule "noSimilarSesssions"
    when
    	Allocation($aid : ID, getShift() != null, $ashift : getShift(), getPerson() != null, $aPersonID : getPerson().getID())
    	Allocation(ID> $aid, getShift().checkIfSimilar($ashift), getPerson().getID() == $aPersonID )
    then
    scoreHolder.addSoftConstraintMatch(kcontext, -1);//use correlation degree instead of -1
end

rule "longExperimentsSingle"
    when
    	Allocation(getShift() != null, $ashift : getShift(), getShift().isLong(), getPerson() != null, $aPersonID : getPerson().getID())
   		not Allocation(getShift() != null, getPerson() != null, getShift().checkIfLong($ashift), getPerson().getID() == $aPersonID)
 then
    scoreHolder.addHardConstraintMatch(kcontext, -5);
end

rule "preferencesSoft"
    when
    	$totalPreferences : Number() from accumulate(
    		Allocation(getShift() != null, getPerson() != null, $preference: getPerson().checkPreference(getShift())),
    		sum($preference)
    	)
    then
    scoreHolder.addSoftConstraintMatch(kcontext, $totalPreferences.intValue()-9);//maximal sum of preferences given
end

rule "preferencesHard"
   when
   		Person($aPersonID : getID())
		not Allocation(getShift() != null, getPerson() != null, getPerson().getID() == $aPersonID, getPerson().isPreference(getShift()))
   then
   scoreHolder.addHardConstraintMatch(kcontext, -1);//at least one preference
end

	